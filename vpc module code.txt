#vpc main.tf 
#create vpc
resource "aws_vpc" "this_vpc" {
    cidr_block = var.this_vpc_cidr_block //"26.11.0.0/16"

    tags = {
      Name = var.this_vpc_Name //"tf_vpc"
    }
  
}

#create public subnet
resource "aws_subnet" "public_sub" {
    vpc_id = aws_vpc.this_vpc.id
    cidr_block = var.public_sub_cidr_block //"26.11.0.0/17"
    tags ={
        Name = var.public_sub_Name //"public_subnet"
    } 
    map_public_ip_on_launch = var.public_sub_map_public_ip_on_launch //true      #to give internet access
}

#create private subnet
resource "aws_subnet" "private_sub" {
    vpc_id = aws_vpc.this_vpc.id
    cidr_block = var.private_sub_cidr_block //"26.11.128.0/18"
    tags ={
        Name = var.private_sub_Name //"private_subnet"
    } 
    map_public_ip_on_launch = var.private_sub_map_public_ip_on_launch //false
}

#create private1 subnet
resource "aws_subnet" "private_one_sub" {
    vpc_id = aws_vpc.this_vpc.id
    cidr_block = var.private_one_sub_cidr_block //"26.11.192.0/20"
    tags ={
        Name = var.private_one_sub_Name //"private1_subnet"
    } 
    map_public_ip_on_launch = var.private_one_sub_map_public_ip_on_launch //false
}

#route table
resource "aws_default_route_table" "this_route_table" {
  default_route_table_id = aws_vpc.this_vpc.default_route_table_id  //aws_vpc.this_d_rt.default_route_table.id

  route {

    cidr_block = var.this_route_table_cidr_block //"0.0.0.0/0"
    gateway_id = aws_internet_gateway.IGW.id    //aws_internet_gateway.this_d_rt.id
  }
  tags = {
    Name = var.this_route_table_Name //"tf_route"
  }
}

#create internet gateway 
resource "aws_internet_gateway" "IGW" {
    vpc_id = aws_vpc.this_vpc.id
    tags = {
      Name = var.IGW_Name //"tf_IGW"
    }
  
}

#create subnet associate route table
resource "aws_route_table_association" "this_rta" {
    subnet_id = aws_subnet.public_sub.id
    route_table_id = aws_default_route_table.this_route_table.id
}


#vpc var.tf
#vpc
variable "this_vpc_cidr_block" {
    type = string
    //default = "26.11.0.0/16"
}

variable "this_vpc_Name" {
    type = string
     //default = "tf_vpc"
}

#public subnet
variable "public_sub_cidr_block" {
    type = string
    //default = "26.11.0.0/17"
}

variable "public_sub_Name" {
    type = string 
       // default = "public_subnet"
        }

#private subnet
variable "private_sub_cidr_block" {
    type = string
   // default = "26.11.128.0/18"
}

variable "private_sub_Name" {
    type = string 
   // default = "private_subnet"
}

#private1 subnet
variable "private_one_sub_cidr_block" {
    type = string
    //default = "26.11.192.0/20" 
}

variable "private_one_sub_Name" {
    type = string
        //default = "private1_subnet"
}

#route table
variable "this_route_table_cidr_block" {
    type = string
    //default = "0.0.0.0/0"  
}

variable "this_route_table_Name" {
    type = string
     //default = "tf_route"      
}

#internet gateway
variable "IGW_Name" {
    type = string
   // default = "tf_IGW"
}

#public subnet map 
variable "public_sub_map_public_ip_on_launch" {
    type = bool
    //default = true 
}

#private subnet map
variable "private_sub_map_public_ip_on_launch" {
    type = bool
   // default = false
}

#private1 subnet map
variable "private_one_sub_map_public_ip_on_launch" {
    type = bool
    //default = false
}


#vpc output.tf
#vpc
output "vpc_id" {
    description = "vpc id"
    value = aws_vpc.this_vpc.id  
}

#public subnet
output "public_subnet_id" {
    description = "show public subnet id"
    value = aws_subnet.private_sub.id  
}

#private subnet
output "private_subnet_id" {
    description = "show private subnet id"
    value = aws_subnet.private_sub.id
}


#dev profile.tf
provider "aws" {
  region                   = "us-west-1"
  profile                  = "configs"
  shared_credentials_files = ["/home/shashank/.aws/credentials"]

}

terraform {
  backend "s3" {
    bucket                   = "tf-demo-new"
    key                      = "terraform.tfstate"
    dynamodb_table           = "tf-new-table"
    region                   = "us-west-1"
    profile                  = "configs"
    shared_credentials_files = ["/home/shashank/.aws/credentials"]

  }
}


#dev main.tf
module "vpc" {
  source                                  = "/mnt/c/shashank/shashank-module-tf/resource/vpc" #go vpc folder & copy path from terminal
  this_vpc_cidr_block                     = "26.11.0.0/16"                                    #variable file->label & default values
  this_vpc_Name                           = "tf_vpc"
  public_sub_cidr_block                   = "26.11.0.0/17"
  public_sub_Name                         = "public_subnet"
  private_sub_cidr_block                  = "26.11.128.0/18"
  private_sub_Name                        = "private_subnet"
  private_one_sub_cidr_block              = "26.11.192.0/20"
  private_one_sub_Name                    = "private1_subnet"
  this_route_table_cidr_block             = "0.0.0.0/0"
  this_route_table_Name                   = "tf_route"
  IGW_Name                                = "tf_IGW"
  public_sub_map_public_ip_on_launch      = true
  private_sub_map_public_ip_on_launch     = false
  private_one_sub_map_public_ip_on_launch = false

}